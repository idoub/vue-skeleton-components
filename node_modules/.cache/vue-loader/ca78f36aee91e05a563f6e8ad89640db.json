{"remainingRequest":"/Users/idoub/.nvm/versions/node/v10.16.2/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/idoub/Workspace/Javascript/components/components/JTextList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/idoub/Workspace/Javascript/components/components/JTextList.vue","mtime":1581002145044},{"path":"/Users/idoub/.nvm/versions/node/v10.16.2/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/idoub/.nvm/versions/node/v10.16.2/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/idoub/.nvm/versions/node/v10.16.2/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport JText from './JText';\n\nexport default {\n  name: 'JTextList',\n  props: {\n    options: {\n      type: Array,\n      default: () => ([]),\n    },\n    type: {\n      type: Object,\n      default: () => (JText),\n    },\n    value: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  methods: {\n    input(key, newValue) {\n      this.value[key] = newValue;\n      this.$emit('input', this.value);\n    },\n  },\n  computed: {\n    localValue() {\n      return this.value;\n    }\n  }\n}\n",{"version":3,"sources":["JTextList.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JTextList.vue","sourceRoot":"components","sourcesContent":["<script>\nimport JText from './JText';\n\nexport default {\n  name: 'JTextList',\n  props: {\n    options: {\n      type: Array,\n      default: () => ([]),\n    },\n    type: {\n      type: Object,\n      default: () => (JText),\n    },\n    value: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  methods: {\n    input(key, newValue) {\n      this.value[key] = newValue;\n      this.$emit('input', this.value);\n    },\n  },\n  computed: {\n    localValue() {\n      return this.value;\n    }\n  }\n}\n</script>\n\n<template>\n  <div>\n    <component\n      :is=\"type\"\n      v-for=\"(option, index) in options\"\n      :key=\"index\"\n      :descriptor=\"option.descriptor\"\n      :value=\"localValue[option.key]\"\n      @input=\"(newVal) => input(option.key, newVal)\"\n    ></component>\n  </div>\n</template>\n"]}]}